"""users table & post table

Revision ID: 4faed2b21485
Revises: 
Create Date: 2019-05-01 20:13:54.381010

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4faed2b21485'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=140), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_timestamp'), 'post', ['timestamp'], unique=False)
    op.drop_table('course')
    op.drop_table('weather')
    op.drop_table('lianxi1')
    op.drop_table('cities')
    op.drop_index('ix_message_timestamp', table_name='message')
    op.drop_table('message')
    op.drop_table('messagebackup')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messagebackup',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('message',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='message_pkey')
    )
    op.create_index('ix_message_timestamp', 'message', ['timestamp'], unique=False)
    op.create_table('cities',
    sa.Column('city', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('location', sa.NullType(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('city', name='cities_pkey'),
    comment='城市',
    postgresql_ignore_search_path=False
    )
    op.create_table('lianxi1',
    sa.Column('key', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('x', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('y', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('z', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('weather',
    sa.Column('city', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('temp_lo', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('temp_hi', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prcp', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city'], ['cities.city'], name='weather_city_fkey')
    )
    op.create_table('course',
    sa.Column('name', sa.CHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('course', sa.CHAR(length=10), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_post_timestamp'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
